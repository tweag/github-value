---
version: "2"
services:
  backend:
    restart: always
    build:
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      PORT: 8080
      NODE_ENV: production
      NODE_OPTIONS: --enable-source-maps
      MONGODB_URI: mongodb://root:octocat@mongo:27017

    env_file:
      - backend/.env
    depends_on:
      mongo:
        condition: service_healthy
    volumes:
      - ./:/src

  mongo:
    image: mongo
    restart: always
    ports:
      - '27017:27017'
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: octocat
    volumes:
      - mongo-data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')", "-u", "root", "-p", "octocat", "--authenticationDatabase", "admin"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 20s

  # Adapted from https://github.com/nginx-proxy/acme-companion/blob/main/docs/Docker-Compose.md
  nginx-proxy:
    image: nginx:alpine
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - vhost:/etc/nginx/vhost.d
      - conf:/etc/nginx/conf.d
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs:ro

  docker-gen:
    image: nginxproxy/docker-gen
    container_name: nginx-proxy-gen
    command: -notify-sighup nginx-proxy -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    volumes_from:
      - nginx-proxy
    volumes:
      - ./nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro

  acme-companion:
    image: nginxproxy/acme-companion
    container_name: nginx-proxy-acme
    environment:
      - NGINX_DOCKER_GEN_CONTAINER=nginx-proxy-gen
    volumes_from:
      - nginx-proxy
    volumes:
      - certs:/etc/nginx/certs:rw
      - acme:/etc/acme.sh
      - /var/run/docker.sock:/var/run/docker.sock:ro

volumes:
  mongo-data:
  vhost:
  conf:
  html:
  certs:
  acme:
